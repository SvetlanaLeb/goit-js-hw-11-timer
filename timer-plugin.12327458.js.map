{"version":3,"sources":["timer-plugin.js"],"names":["refs","daysText","document","querySelector","hoursText","minsText","secsText","CountdownTimer","constructor","selector","targetDate","onTick","start","setInterval","startTime","Date","now","deltaTime","time","getTimeComponents","days","pad","Math","floor","hours","mins","secs","value","String","padStart","countdownTimer","updateClockFace","textContent"],"mappings":";;;AA0DC,aA1DD,QAAA,oBAEA,MAAMA,EAAO,CACTC,SAAWC,SAASC,cAAc,2BAClCC,UAAYF,SAASC,cAAc,4BACnCE,SAAWH,SAASC,cAAc,2BAClCG,SAAWJ,SAASC,cAAc,4BAGtC,MAAMI,EAEFC,aAAY,SAAEC,EAAF,WAAYC,EAAZ,OAAwBC,IAC3BA,KAAAA,OAASA,EACTD,KAAAA,WAAaA,EACbD,KAAAA,SAAWA,EAGpBG,QACUF,MAAAA,EAAa,KAAKA,WAExBG,YAAY,KACFC,MAAAA,EAAYC,KAAKC,MACjBC,EAAYP,EAAaI,EACzBI,EAAO,KAAKC,kBAAkBF,GAE/BN,KAAAA,OAAOO,IACb,KAEPC,kBAAkBD,GAOP,MAAA,CAAEE,KALI,KAAKC,IAAIC,KAAKC,MAAML,EAAQ,QAK1BM,MAJD,KAAKH,IAAIC,KAAKC,MAAOL,EAAQ,MAAyB,OAI9CO,KAHT,KAAKJ,IAAIC,KAAKC,MAAOL,EAAQ,KAAoB,MAGlCQ,KAFf,KAAKL,IAAIC,KAAKC,MAAOL,EAAQ,IAAc,OAI5DG,IAAIM,GACOC,OAAAA,OAAOD,GAAOE,SAAS,EAAG,MAMzC,MAAMC,EAAiB,IAAIvB,EAAe,CACtCE,SAAU,WACVC,WAAY,IAAIK,KAAK,gBACrBJ,OAAQoB,IAMZ,SAASA,GAAgB,KAAEX,EAAF,MAAQI,EAAR,KAAeC,EAAf,KAAqBC,IAC1C1B,EAAKC,SAAS+B,eAAiBZ,IAC/BpB,EAAKI,UAAU4B,eAAiBR,IAChCxB,EAAKK,SAAS2B,eAAiBP,IAC/BzB,EAAKM,SAAS0B,eAAiBN,IANnCI,EAAelB","file":"timer-plugin.12327458.js","sourceRoot":"../src","sourcesContent":["import './css/common.css';\n\nconst refs = {\n    daysText : document.querySelector('span[data-value=\"days\"]'),\n    hoursText : document.querySelector('span[data-value=\"hours\"]'),\n    minsText : document.querySelector('span[data-value=\"mins\"]'),\n    secsText : document.querySelector('span[data-value=\"secs\"]'),\n}\n\nclass CountdownTimer {\n\n    constructor({ selector, targetDate, onTick } ) {\n        this.onTick = onTick;\n        this.targetDate = targetDate;\n        this.selector = selector;\n       \n    }\n    start() {\n        const targetDate = this.targetDate;\n\n        setInterval(() => {\n            const startTime = Date.now();\n            const deltaTime = targetDate - startTime;\n            const time = this.getTimeComponents(deltaTime);\n\n            this.onTick(time);\n        }, 1000)\n    }\n    getTimeComponents(time) {\n\n        const days = this.pad(Math.floor(time / (1000 * 60 * 60 * 24)));\n        const hours = this.pad(Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)));\n        const mins = this.pad(Math.floor((time % (1000 * 60 * 60)) / (1000 * 60)));\n        const secs = this.pad(Math.floor((time % (1000 * 60)) / 1000));\n\n        return { days, hours, mins, secs };\n    }\n    pad(value) {\n        return String(value).padStart(2, '0');\n    };\n    \n    \n};\n\nconst countdownTimer = new CountdownTimer({\n    selector: '#timer-1',\n    targetDate: new Date('Jul 19, 2021'),\n    onTick: updateClockFace,\n});\n\n\ncountdownTimer.start();\n\nfunction updateClockFace({ days, hours, mins, secs }) {\n    refs.daysText.textContent = `${days}`;\n    refs.hoursText.textContent = `${hours}`;\n    refs.minsText.textContent = `${mins}`;\n    refs.secsText.textContent = `${secs}`;\n};\n\n\n\n"]}